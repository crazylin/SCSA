<reactiveUi:ReactiveUserControl
    x:TypeArguments="viewModels:RealTimeTestViewModel" xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:SCSA.Converters"
    xmlns:plot="clr-namespace:SCSA.Plot;assembly=SCSA.Plot"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:viewModels="clr-namespace:SCSA.ViewModels"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
    x:Class="SCSA.RealTimeTestView">
  <reactiveUi:ReactiveUserControl.Resources>
    <converters:EnumToBooleanConverter x:Key="EnumConverter" />
    <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
    <converters:NullToBooleanConverter x:Key="NullToBoolConverter" />
    <converters:BoolToStartStopTextConverter x:Key="StartStopTextConverter" />
  </reactiveUi:ReactiveUserControl.Resources>
  <reactiveUi:ReactiveUserControl.DataTemplates>
    <DataTemplate DataType="plot:CuPlotViewModel">
        <plot:CuPlotModelView />
    </DataTemplate>
  </reactiveUi:ReactiveUserControl.DataTemplates>
  <Grid ColumnDefinitions="220,5,*" IsEnabled="{Binding ControlEnable}">
    <StackPanel Orientation="Vertical" Spacing="5" Margin="10">
      <!-- 按钮区域 -->
      <Grid Margin="5 0">
          <Button Content="{Binding IsTestRunning, Converter={StaticResource StartStopTextConverter}, ConverterParameter=测试}"
                  Command="{Binding ToggleTestCommand}" HorizontalAlignment="Stretch" />
      </Grid>

      <!-- 进度显示区域 -->
      <StackPanel Spacing="5" Margin="0,10,0,0">
        <ProgressBar Minimum="0" Maximum="100"
                     Value="{Binding SaveProgress}"
                     IsVisible="{Binding ShowDataStorageInfo}"
                     Height="25" />
        <TextBlock
            Margin="0,5,0,0"
            IsVisible="{Binding SelectedTriggerType, 
                               Converter={StaticResource EnumConverter}, 
                               ConverterParameter=DebugTrigger}">
          <Run Text="触发状态：" />
          <Run Text="{Binding TriggerStatus}" />
        </TextBlock>
        <StackPanel Orientation="Vertical" Margin="0 5">
          <TextBlock Text="{Binding TestStatus}" />
          <TextBlock Text="{Binding ReceivedProgress, StringFormat='数据接收进度：{0}%'}"
                     IsVisible="{Binding ShowDataStorageInfo}" />
          <TextBlock Text="{Binding SaveProgress, StringFormat='数据保存进度：{0}%'}"
                     IsVisible="{Binding ShowDataStorageInfo}" />
        </StackPanel>
      </StackPanel>

      <StackPanel Orientation="Vertical" Spacing="5" Margin="0,10,0,0">
        <TextBlock Text="选择信号类型：" FontSize="14" FontWeight="Bold" />
        <ComboBox ItemsSource="{Binding SignalTypes}"
                  SelectedItem="{Binding SelectedSignalType}"
                  IsEnabled="{Binding SelectedSignalTypeEnable}"
                  HorizontalAlignment="Stretch" />
      </StackPanel>

      <StackPanel Orientation="Vertical" Spacing="5" Margin="0,10,0,0">
        <TextBlock Text="采样率：" FontSize="14" FontWeight="Bold" />
        <ComboBox ItemsSource="{Binding SampleRateList}"
                  SelectedItem="{Binding SelectedSampleRate}"
                  IsEnabled="{Binding SelectedSignalTypeEnable}"
                  DisplayMemberBinding="{Binding DisplayName}"
                  HorizontalAlignment="Stretch" />
      </StackPanel>

      <StackPanel Orientation="Vertical" Spacing="5" Margin="0,10,0,0">
        <TextBlock Text="显示点数：" FontSize="14" FontWeight="Bold" />
        <TextBox Text="{Binding DisplayPointCount}" />
      </StackPanel>

      <StackPanel Orientation="Vertical" Spacing="5" Margin="0,10,0,0">
        <TextBlock Text="直流：" FontSize="14" FontWeight="Bold" />
        <CheckBox Content="启用去直流" FontSize="14" IsChecked="{Binding RemoveDc}" />
      </StackPanel>
      <StackPanel Orientation="Vertical" Spacing="5" Margin="0,10,0,0">
        <TextBlock Text="窗函数：" FontSize="14" FontWeight="Bold" />
        <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding WindowFunctions}"
                  SelectedItem="{Binding SelectedWindowFunction}" />
      </StackPanel>
      <StackPanel Orientation="Vertical" Spacing="5" Margin="0,10,0,0">
        <TextBlock Text="滤波：" FontSize="14" FontWeight="Bold" />

        <CheckBox Content="启用滤波" FontSize="14" IsChecked="{Binding EnableFilter}" />

        <StackPanel Orientation="Vertical" IsEnabled="{Binding EnableFilter }" Spacing="5">

          <!-- 低通 -->
          <Grid ColumnDefinitions="Auto,*" Margin="5 0 0 0">
            <RadioButton Content="低通"
                         GroupName="Filter"
                         VerticalAlignment="Center"
                         IsChecked="{Binding FilterType, 
                                   Converter={StaticResource EnumConverter}, 
                                   ConverterParameter=LowPass, 
                                   Mode=TwoWay}" />
            <NumericUpDown Grid.Column="1" ShowButtonSpinner="False"
                           HorizontalAlignment="Stretch"
                           IsEnabled="{Binding FilterType, 
                                    Converter={StaticResource EnumConverter}, 
                                    ConverterParameter=LowPass}"
                           Value="{Binding LowPass}" />
          </Grid>

          <!-- 高通 -->
          <Grid ColumnDefinitions="Auto,*" Margin="5 0 0 0">
            <RadioButton Content="高通"
                         GroupName="Filter"
                         VerticalAlignment="Center"
                         IsChecked="{Binding FilterType, 
                                   Converter={StaticResource EnumConverter}, 
                                   ConverterParameter=HighPass, 
                                   Mode=TwoWay}" />
            <NumericUpDown Grid.Column="1" ShowButtonSpinner="False"
                           HorizontalAlignment="Stretch"
                           IsEnabled="{Binding FilterType, 
                                    Converter={StaticResource EnumConverter}, 
                                    ConverterParameter=HighPass}"
                           Value="{Binding HighPass}" />
          </Grid>

          <!-- 带通 -->
          <Grid ColumnDefinitions="Auto,*,*" Margin="5 0 0 0">
            <RadioButton Content="带通"
                         GroupName="Filter"
                         VerticalAlignment="Center"
                         IsChecked="{Binding FilterType, 
                                   Converter={StaticResource EnumConverter}, 
                                   ConverterParameter=BandPass, 
                                   Mode=TwoWay}" />
            <NumericUpDown Grid.Column="1" ShowButtonSpinner="False"
                           HorizontalAlignment="Stretch"
                           IsEnabled="{Binding FilterType, 
                                    Converter={StaticResource EnumConverter}, 
                                    ConverterParameter=BandPass}"
                           Value="{Binding BandPassFirst}" />
            <NumericUpDown Grid.Column="2" ShowButtonSpinner="False"
                           HorizontalAlignment="Stretch"
                           Margin="5,0,0,0"
                           IsEnabled="{Binding FilterType, 
                                    Converter={StaticResource EnumConverter}, 
                                    ConverterParameter=BandPass}"
                           Value="{Binding BandPassSecond}" />
          </Grid>

        </StackPanel>
      </StackPanel>

    </StackPanel>
    <GridSplitter Grid.Column="1" />
    <!-- 动态生成波形图 -->
    <ScrollViewer Grid.Column="2">
      <ItemsControl ItemsSource="{Binding Waveforms}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <Grid />
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <UniformGrid Rows="2">
              <ContentControl Content="{Binding TimeDomainModel}" />
              <Grid ColumnDefinitions="*,Auto">
                  <ContentControl Grid.Column="0"  Content="{Binding FrequencyDomainModel}" />
                  <Grid Grid.Column="1" ColumnDefinitions="*,Auto">
                      <ContentControl Content="{Binding LissajousModel}" MinWidth="300"
                                      IsVisible="{Binding LissajousModel, Converter={StaticResource NullToBoolConverter}}"/>
                      <ProgressBar Grid.Column="1" Width="20" Minimum="0" Maximum="300" Orientation="Vertical"
                                   Value="{Binding Strength}" VerticalAlignment="Stretch" Margin="0 40 10 40"
                                   BorderThickness="0" Background="Transparent"
                                   IsVisible="{Binding LissajousModel, Converter={StaticResource NullToBoolConverter}}"/>
                  </Grid>
              </Grid>
            </UniformGrid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </ScrollViewer>
  </Grid>
</reactiveUi:ReactiveUserControl>